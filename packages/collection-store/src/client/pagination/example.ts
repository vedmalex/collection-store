/**
 * Phase 5: Client Integration - Pagination Example
 *
 * –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Advanced Pagination System
 */

import { CursorPaginationManager } from './CursorPaginationManager'
import { SortingEngine } from './SortingEngine'
import { QueryOptimizer } from './QueryOptimizer'
import { SortConfig, PaginationConfig } from './interfaces/types'

/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è e-commerce –∫–∞—Ç–∞–ª–æ–≥–∞
 */
export async function ecommerceProductPaginationExample() {
  console.log('üõçÔ∏è E-commerce Product Pagination Example')
  console.log('==========================================')

  // –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  const paginationManager = new CursorPaginationManager()
  const sortingEngine = new SortingEngine()
  const queryOptimizer = new QueryOptimizer()

  // –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
  const productQuery = {
    category: 'electronics',
    inStock: true,
    price: { $gte: 100, $lte: 1000 }
  }

  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏: —Å–Ω–∞—á–∞–ª–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ, –ø–æ—Ç–æ–º –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É, —Ü–µ–Ω–µ –∏ –Ω–∞–∑–≤–∞–Ω–∏—é
  const sortConfig: SortConfig[] = [
    { field: 'featured', direction: 'desc', type: 'boolean' },
    { field: 'rating', direction: 'desc', type: 'number' },
    { field: 'price', direction: 'asc', type: 'number' },
    { field: 'name', direction: 'asc', type: 'string' }
  ]

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  if (!sortingEngine.validateSortConfig(sortConfig)) {
    throw new Error('Invalid sort configuration')
  }

  console.log('‚úÖ Sort configuration validated')

  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
  const paginationConfig: PaginationConfig = {
    limit: 24, // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞
    sort: sortConfig,
    format: 'base64_json'
  }

  // –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞
  const performanceAnalysis = queryOptimizer.analyzeQueryPerformance(productQuery, paginationConfig)
  console.log('üìä Performance Analysis:')
  console.log(`   Estimated Cost: ${performanceAnalysis.estimatedCost}`)
  console.log(`   Recommended Indexes: ${performanceAnalysis.recommendedIndexes.join(', ')}`)

  if (performanceAnalysis.optimizationSuggestions.length > 0) {
    console.log(`   Suggestions: ${performanceAnalysis.optimizationSuggestions.join(', ')}`)
  }

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞
  const optimizedQuery = queryOptimizer.optimizeForPagination(
    productQuery,
    paginationConfig,
    {
      useIndexHints: true,
      maxScanDocuments: 1000
    }
  )

  console.log('‚ö° Query optimized with index hints')

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  const queryPlan = queryOptimizer.generateQueryPlan(productQuery, paginationConfig)
  console.log('üìã Query Plan:')
  queryPlan.steps.forEach((step, index) => {
    console.log(`   ${index + 1}. ${step}`)
  })
  console.log(`   Estimated Time: ${queryPlan.estimatedTime}ms`)

  // –°–∏–º—É–ª—è—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã –≤—ã–∑–æ–≤ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö)
  console.log('üîÑ Executing pagination...')

  // –ü—Ä–∏–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  const mockFirstPageResult = {
    data: [
      { _id: 'prod1', name: 'iPhone 15', price: 999, rating: 4.8, featured: true, category: 'electronics' },
      { _id: 'prod2', name: 'MacBook Pro', price: 1299, rating: 4.9, featured: true, category: 'electronics' },
      { _id: 'prod3', name: 'iPad Air', price: 599, rating: 4.7, featured: false, category: 'electronics' }
    ],
    hasMore: true,
    nextCursor: undefined as string | undefined,
    totalCount: undefined
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  if (mockFirstPageResult.hasMore && mockFirstPageResult.data.length > 0) {
    const lastItem = mockFirstPageResult.data[mockFirstPageResult.data.length - 1]
    const sortValues = [
      lastItem.featured,
      lastItem.rating,
      lastItem.price,
      lastItem.name
    ]

    mockFirstPageResult.nextCursor = paginationManager.encodeCursor(
      sortValues,
      lastItem._id,
      { format: 'base64_json', includeTimestamp: true }
    )
  }

  console.log('üìÑ First Page Results:')
  console.log(`   Products Found: ${mockFirstPageResult.data.length}`)
  console.log(`   Has More: ${mockFirstPageResult.hasMore}`)
  console.log(`   Next Cursor: ${mockFirstPageResult.nextCursor?.substring(0, 20)}...`)

  // –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  if (mockFirstPageResult.nextCursor) {
    console.log('\nüîÑ Fetching next page...')

    const nextPageConfig: PaginationConfig = {
      ...paginationConfig,
      cursor: mockFirstPageResult.nextCursor
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫—É—Ä—Å–æ—Ä–∞
    const isCursorValid = paginationManager.validateCursor(mockFirstPageResult.nextCursor)
    console.log(`‚úÖ Cursor validation: ${isCursorValid ? 'Valid' : 'Invalid'}`)

    // –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    const decodedCursor = paginationManager.decodeCursor(mockFirstPageResult.nextCursor)
    console.log('üîç Decoded Cursor:')
    console.log(`   Sort Values: [${decodedCursor.sortValues.join(', ')}]`)
    console.log(`   Document ID: ${decodedCursor.documentId}`)
    console.log(`   Timestamp: ${new Date(decodedCursor.timestamp).toISOString()}`)
  }

  console.log('\n‚úÖ E-commerce pagination example completed successfully!')
}

/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */
export async function userSearchPaginationExample() {
  console.log('\nüë• User Search Pagination Example')
  console.log('==================================')

  const paginationManager = new CursorPaginationManager()
  const sortingEngine = new SortingEngine()
  const queryOptimizer = new QueryOptimizer()

  // –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const userQuery = {
    department: { $in: ['engineering', 'design'] },
    level: { $gte: 'mid' },
    skills: { $all: ['javascript'] },
    active: true
  }

  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏ –∏–º–µ–Ω–∏
  const sortConfig: SortConfig[] = [
    { field: 'lastActive', direction: 'desc', type: 'date' },
    { field: 'name', direction: 'asc', type: 'string' }
  ]

  const paginationConfig: PaginationConfig = {
    limit: 50,
    sort: sortConfig,
    filters: { verified: true }, // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    format: 'base64_json'
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è in-memory —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  const comparator = sortingEngine.createSortComparator(sortConfig)
  console.log('üîß Created sort comparator for in-memory sorting')

  // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  const sampleUsers = [
    { name: 'Alice', lastActive: '2023-12-01T10:00:00Z', department: 'engineering' },
    { name: 'Bob', lastActive: '2023-12-01T09:00:00Z', department: 'design' },
    { name: 'Charlie', lastActive: '2023-12-01T11:00:00Z', department: 'engineering' }
  ]

  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
  const sortedUsers = sampleUsers.sort(comparator)
  console.log('üìä Sorted users:')
  sortedUsers.forEach((user, index) => {
    console.log(`   ${index + 1}. ${user.name} (${user.lastActive})`)
  })

  // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –±–æ–ª—å—à–∏—Ö datasets
  const optimizedQuery = queryOptimizer.optimizeForPagination(
    userQuery,
    paginationConfig,
    {
      useIndexHints: true,
      maxScanDocuments: 2000,
      preferredIndexes: ['lastActive_-1', 'name_1']
    }
  )

  console.log('‚ö° Query optimized for large dataset')

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  const performanceHint = sortingEngine.getSortPerformanceHint(sortConfig)
  console.log(`üí° Performance Hint: ${performanceHint}`)

  console.log('\n‚úÖ User search pagination example completed successfully!')
}

/**
 * –ü—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –∫—É—Ä—Å–æ—Ä–æ–≤
 */
export function cursorFormatsExample() {
  console.log('\nüîó Cursor Formats Example')
  console.log('=========================')

  const paginationManager = new CursorPaginationManager()

  // Simple ID —Ñ–æ—Ä–º–∞—Ç
  console.log('üìù Simple ID Format:')
  const simpleIdCursor = paginationManager.encodeCursor([], 'user123', {
    format: 'simple_id'
  })
  console.log(`   Encoded: ${simpleIdCursor}`)

  const decodedSimple = paginationManager.decodeCursor(simpleIdCursor)
  console.log(`   Decoded: ${JSON.stringify(decodedSimple)}`)

  // Base64 JSON —Ñ–æ—Ä–º–∞—Ç
  console.log('\nüìù Base64 JSON Format:')
  const base64Cursor = paginationManager.encodeCursor(
    ['Alice', 25, '2023-01-01'],
    'user123',
    {
      format: 'base64_json',
      includeTimestamp: true
    }
  )
  console.log(`   Encoded: ${base64Cursor}`)

  const decodedBase64 = paginationManager.decodeCursor(base64Cursor)
  console.log(`   Decoded: ${JSON.stringify(decodedBase64, null, 2)}`)

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫—É—Ä—Å–æ—Ä–æ–≤
  console.log('\n‚úÖ Cursor Validation:')
  console.log(`   Simple ID Valid: ${paginationManager.validateCursor(simpleIdCursor)}`)
  console.log(`   Base64 JSON Valid: ${paginationManager.validateCursor(base64Cursor)}`)
  console.log(`   Invalid Cursor Valid: ${paginationManager.validateCursor('')}`)

  console.log('\n‚úÖ Cursor formats example completed successfully!')
}

/**
 * –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
 */
export async function runAllExamples() {
  console.log('üöÄ Advanced Pagination System Examples')
  console.log('======================================\n')

  try {
    await ecommerceProductPaginationExample()
    await userSearchPaginationExample()
    cursorFormatsExample()

    console.log('\nüéâ All examples completed successfully!')
    console.log('The Advanced Pagination System is ready for production use.')
  } catch (error) {
    console.error('‚ùå Error running examples:', error)
  }
}

// –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runAllExamples()
}